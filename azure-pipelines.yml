trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:

  # Azure service principal credentials (these should be stored securely in the pipeline's variable group or secret store)
  azureServicePrincipalId: $(azureServicePrincipalId)
  azureServicePrincipalKey: $(azureServicePrincipalKey)
  azureTenantId: $(azureTenantId)
  azureSubscriptionId: $(azureSubscriptionId)

steps:

# Step to install Terraform manually
- script: |
    echo "Installing Terraform..."
    curl -LO https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip
    unzip terraform_1.0.0_linux_amd64.zip
    sudo mv terraform /usr/local/bin/
    terraform -v
  displayName: 'Install Terraform Manually'

# Step to authenticate with Azure
- task: AzureCLI@2
  displayName: 'Azure CLI login'
  inputs:
    azureSubscription: $(azureSubscriptionId)
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      az login --service-principal -u $(azureServicePrincipalId) -p $(azureServicePrincipalKey) --tenant $(azureTenantId)

# Step to initialize Terraform
- script: |
    source $(System.DefaultWorkingDirectory)/BESS/terraform
    terraform init
  displayName: 'Terraform Init'
  workingDirectory: $(System.DefaultWorkingDirectory)/BESS/terraform 

# Step to plan Terraform deployment
- script: |
    source $(System.DefaultWorkingDirectory)/BESS/terraform
    terraform plan -out=tfplan
  displayName: 'Terraform Plan'
  workingDirectory: $(System.DefaultWorkingDirectory)/BESS/terraform

# Step to apply Terraform deployment
- script: |
    source $(System.DefaultWorkingDirectory)/BESS/terraform
    terraform apply -auto-approve tfplan
  displayName: 'Terraform Apply'
  workingDirectory: $(System.DefaultWorkingDirectory)/BESS/terraform

